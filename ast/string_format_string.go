// Code generated by "stringer -output ast/string_format_string.go -type StringFormat ast/string_format.go"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[FormatDateTime-1]
	_ = x[FormatTime-2]
	_ = x[FormatDate-3]
	_ = x[FormatDuration-4]
	_ = x[FormatEmail-5]
	_ = x[FormatIdnEmail-6]
	_ = x[FormatHostname-7]
	_ = x[FormatIdnHostname-8]
	_ = x[FormatIPv4-9]
	_ = x[FormatIPv6-10]
	_ = x[FormatUUID-11]
	_ = x[FormatURI-12]
	_ = x[FormatURIReference-13]
	_ = x[FormatIRI-14]
	_ = x[FormatIRIReference-15]
	_ = x[FormatURITemplate-16]
	_ = x[FormatJSONPointer-17]
	_ = x[FormatRelativeJSONPointer-18]
	_ = x[FormatRegex-19]
}

const _StringFormat_name = "FormatDateTimeFormatTimeFormatDateFormatDurationFormatEmailFormatIdnEmailFormatHostnameFormatIdnHostnameFormatIPv4FormatIPv6FormatUUIDFormatURIFormatURIReferenceFormatIRIFormatIRIReferenceFormatURITemplateFormatJSONPointerFormatRelativeJSONPointerFormatRegex"

var _StringFormat_index = [...]uint16{0, 14, 24, 34, 48, 59, 73, 87, 104, 114, 124, 134, 143, 161, 170, 188, 205, 222, 247, 258}

func (i StringFormat) String() string {
	i -= 1
	if i >= StringFormat(len(_StringFormat_index)-1) {
		return "StringFormat(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _StringFormat_name[_StringFormat_index[i]:_StringFormat_index[i+1]]
}
